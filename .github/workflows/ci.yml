name: CI checks

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.44.0
          override: true
      - name: Install build dependencies
        run: sudo apt install libpcsclite-dev

      # Ensure all code has been formatted with rustfmt
      - run: rustup component add rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --color always

      - run: rustup component add clippy
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, windows, macos]
        include:
          - name: linux
            os: ubuntu-latest
            build_deps: >
              libpcsclite-dev

          - name: windows
            os: windows-latest

          - name: macos
            os: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.44.0
          override: true
      - name: Install build dependencies
        run: sudo apt install ${{ matrix.build_deps }}
        if: matrix.build_deps != ''
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: Build tests
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --tests
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  codecov:
    name: Code coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install build dependencies
        run: sudo apt install libpcsclite-dev
      - name: Generate coverage report
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: --release --timeout 180 --out Xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  doc-links:
    name: Nightly lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install build dependencies
        run: sudo apt install libpcsclite-dev
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      # Ensure intra-documentation links all resolve correctly
      # Requires #![deny(intra_doc_link_resolution_failure)] in crates.
      - name: Check intra-doc links
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --document-private-items
