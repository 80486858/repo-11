image: maven:3.6.1-jdk-8-alpine
# Inspired by https://gitlab.com/gitlab-examples/maven/simple-maven-dep

variables:
  BUILD_NUMBER: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
  # re-add --batch-mode to reduce output
  MAVEN_CLI_OPTS: "--errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/repository


verify:
  stage: test
  before_script:
    - apk update
    - apk add rsync
  script:
    - 'mvn $MAVEN_CLI_OPTS clean -Dbuild.number=${BUILD_NUMER}'
    - 'mvn $MAVEN_CLI_OPTS verify -Dbuild.number=${BUILD_NUMER}'
  except:
    - master
  artifacts:
    paths:
      - target/rpki-commons-${BUILD_NUMBER}.jar

deploy:
  stage: deploy
  before_script:
    - apk update
    - apk add rsync
  script:
    - if [ ! -f ci_settings.xml ];
        then echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/project/packages/maven_repository.html#creating-maven-packages-with-gitlab-cicd for instructions.";
      fi
    # The mvn release commands are from bamboo setup.
    # `release:prepare` and `release:perform` tries to do a git commit -> disabled for now
    - 'mvn $MAVEN_CLI_OPTS release:clean'
    # - 'mvn $MAVEN_CLI_OPTS release:prepare -B -DautoVersionSubmodules=true -DupdateDependencies=false'
    # - 'mvn $MAVEN_CLI_OPTS release:perform -B'
    - 'mvn $MAVEN_CLI_OPTS deploy -s ci_settings.xml'
  only:
    - master
