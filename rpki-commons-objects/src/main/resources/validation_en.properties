############################################
# CERTIFICATE REPOSITORY OBJECT VALIDATION
############################################

objects.crl.valid=The CRL could be located
unknown.object.type=object type is not known

cert.parsed=Certificate can be parsed
cert.chain.length=Certification chain length is less than {0}
cert.chain.complete=Certification chain is complete
cert.chain.circular.reference=Certification chain contains circular reference
cert.issuer.is.ca=Certificate issuer is CA
cert.signature=Signature is valid
cert.not.valid.before=Not valid before {0}
cert.not.valid.after=Not valid after {0}
cert.resource.range.is.valid=Parent resource set contains certificate resource set
cert.issuer.eq.prev.subject=Issuer and parent subject are the same
cert.key.usage.extension.present=Key usage extension is present
cert.key.cert.sign=keyCertSign bit is true for CA
cert.crl.sign=cRLSign bit is true for CA
cert.dig.sign=digitalSignature bit is true for CA
cert.ski.present=Subject key identifier is present
cert.aki.present=Authority key identifier is present
cert.aki.eq.prev.ski=Authority key identifier and parent subject key identifier are the same
cert.aia.no.certificate=AIA field points to non-certificate
cert.types.different=Validation chain contains different certificate types
cert.signature.algorithm=Certificate signature algorithm is one of SHA256withRSA, SHA384withRSA, or SHA512withRSA

# CRL related messages

# CRLs signed with an invalid key pair will be rejected.
# All certificates pointing to this CRL will be considered invalid.
cert.crl.signature=CRL signature is valid

# CRLs for which the next update time is in the past will be
# rejected. Note that this may be changed later to generate a
# warning instead, or even a warning or error dependent on configuration.
crl.next.update.before.now=CRL next update expected on or before {0}

# The manifest containing the CRL is valid.
crl.manifest.valid=CRL's manifest valid

crl.parsed=CRL can be parsed
crl.required=CRL is required for non root certificates

cert.not.revoked=Certificate is not revoked
cert.critical.exts.present=Critical extensions are present
cert.policy.ext.critical=Critical extension IDs contain policy extension ID
cert.policy.ext.value=Policy extension is present
cert.single.cert.policy=Certificate has only one certificate policy
cert.policy.qualifier.present=Certificate does not have policy qualifiers
cert.policy.id.present=Certificate has a policy identifier
cert.policy.id.version=Certificate policy version is correct
cert.policy.validation=Certificate policy validation passed
cert.resource.ext.present=Resource extension is present
cert.resource.ext.not.present=Resource extension is not present
cert.as.or.ip.resource.present=AS or IP resource is present
cert.partial.resource.inheritance=Resource inheritance is not partial
cert.root.is.ta=Certificate root is Trust Anchor

cms.signed.data.parsing=CMS signed data object can be parsed
cms.signed.data.version=CMS signed data object version is 3
cms.signed.data.digest.algorithm=CMS signed data digest algorithm is SHA-256
cms.content.type=Content type is Signed Data
cms.decode.content=CMS data content can be decoded
cms.only.one.signed.object=Only one signed object is in CMS data
cms.content.parsing=CMS content is valid
cms.get.certs.and.crls=Certificates and CRLs can be loaded
cms.only.one.ee.cert=CMS contains only one end-entity certificate
cms.cert.is.x509=Certificate is an X.509 certificate
cms.cert.is.ee.cert=Certificate is an EE certificate
cms.cert.has.ski=Certificate has Subject Key Identifier
cms.only.one.crl=CMS contains only one crl
cms.crl.is.x509=Crl is an X.509 crl
cms.signature.signer.info=Signer info associated with the signature can be found
cms.signature.has.one.signer=Signature has only one signer
cms.signer.info.version=CMS signer info version is 3
cms.signer.info.digest.algorithm=Digest algorithm in signer info is SHA-256
cms.signer.info.ski=Subject key identifier matches the certificate's
cms.signer.info.ski.only=Signer identifier contains subject key identifier only
cms.encryption.algorithm=Encryption algorithm is RSA
cms.signed.attrs.present=Table of signed attributes is present
cms.content.type.attr.present=Content type attribute is present
cms.content.type.value.count=Content type attribute has one value only
cms.content.type.value=Content type attribute is valid
cms.msg.digest.attr.present=Message digest attribute is present
cms.msg.digest.value.count=Message digest attribute has one value only
cms.signing.time.attr.present=Signing time attribute is present
cms.only.one.signing.time.attr=Only one signing time attribute
cms.signer.id.match.cert=Signer identifier matches certificate
cms.signature=Signature verification passed
cms.unsigned.attrs.omitted=Table of unsigned attributes is empty

roa.content.type=Content type is ROA
roa.resources=Certificate resource set contains ROA resource set
roa.seq.has.asn.and.prefixes=ROA sequence contains ASN and prefixes
roa.prefix.list.not.empty=Prefix list not empty
roa.seq.has.addr.family.and.addressed=ROA sequence contains address family and addresses
roa.addr.family.valid=Address family is IPv4 or IPv6
roa.addr.family.contains.prefix=Address family sequence contains prefix
roa.prefix.length=Prefix length is valid

mf.content.type=Content type is Manifest
mf.content.size=Manifest content size is valid
mf.content.structure=Manifest content structure is valid
mf.time.format=Manifest time format is valid
mf.file.hash.algorithm=Manifest file hash algorithm is valid
mf.decode.filelist=Manifest file list can be decoded
mf.resource.inherit=Manifest EE certificate inherits resources


validator.uri.safety=URI ''{0}'' does not contain unsafe character sequences
validator.uri.rsync.scheme=URI ''{0}'' is an rsync URI
validator.uri.host=URI ''{0}'' contains a host
validator.uri.path=URI ''{0}'' contains a path
validator.file.content=File content can be verified
validator.read.file=File can be read
validator.rsync.command=Rsync retrieval succeeded
validator.fetched.object.is.manifest=Fetched object is a manifest
validator.fetched.object.is.crl=Fetched object is CRL
validator.manifest.does.not.contain.file=Manifest does not contain file: {0}



############################################
#          FIELD VALIDATION
############################################
roaSpecification.nameRequired=Name is required
roaSpecification.nameLength=Name must be shorter than 2000 characters
roaSpecification.namePattern=Name must use characters: A-Z, 0-9, -, _, :, @, ., +, <, >, or spaces
roaSpecification.nameExists=Name already exists

roaSpecification.asnRequired=AS Number is required
roaSpecification.asnValid=AS Number is invalid

roaSpecification.dateTimeRequired=Validity period is required
roaSpecification.dateTimeValid=Invalid date and/or time entered

roaSpecification.prefixRequired=Prefix is required
roaSpecification.illegalPrefix=Illegal prefix
roaSpecification.notOwnerOfResource=The prefix ''{0}'' is not held by this CA

roaSpecification.invalidMaximumLength=The maximum length of prefix is invalid

#roaSpecification.atLeastOnePrefix=At least one prefix must be specified.
#roaSpecification.duplicatePrefixes=The specification contains duplicate prefixes.